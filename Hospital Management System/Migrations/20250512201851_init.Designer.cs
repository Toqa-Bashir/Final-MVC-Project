// <auto-generated />
using CareNet_System.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareNet_System.Migrations
{
    [DbContext(typeof(HosPitalContext))]
    [Migration("20250512201851_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CareNet_System.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Patients_num")
                        .HasColumnType("int");

                    b.Property<int>("employees_num")
                        .HasColumnType("int");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("CareNet_System.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.Property<int>("experience_years")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("seniority_level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("dept_id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("CareNet_System.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("dosage")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("patient_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("patient_id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("CareNet_System.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.Property<int>("followUp_doctorID")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("room_num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dept_id");

                    b.HasIndex("followUp_doctorID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("CareNet_System.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("dept_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("personal_photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("dept_id");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("CareNet_System.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.Property<int>("item_Id")
                        .HasColumnType("int");

                    b.Property<string>("item_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("official_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("official_id")
                        .IsUnique();

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("CareNet_System.Models.Doctor", b =>
                {
                    b.HasOne("CareNet_System.Models.Department", "department")
                        .WithMany("doctors")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("CareNet_System.Models.Medication", b =>
                {
                    b.HasOne("CareNet_System.Models.Patient", "patient")
                        .WithMany("medicication")
                        .HasForeignKey("patient_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("patient");
                });

            modelBuilder.Entity("CareNet_System.Models.Patient", b =>
                {
                    b.HasOne("CareNet_System.Models.Department", "department")
                        .WithMany("patients")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CareNet_System.Models.Doctor", "doctor")
                        .WithMany()
                        .HasForeignKey("followUp_doctorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("CareNet_System.Models.Staff", b =>
                {
                    b.HasOne("CareNet_System.Models.Department", "department")
                        .WithMany("staff")
                        .HasForeignKey("dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("CareNet_System.Models.Warehouse", b =>
                {
                    b.HasOne("CareNet_System.Models.Staff", "staff")
                        .WithOne("warehouse")
                        .HasForeignKey("CareNet_System.Models.Warehouse", "official_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("staff");
                });

            modelBuilder.Entity("CareNet_System.Models.Department", b =>
                {
                    b.Navigation("doctors");

                    b.Navigation("patients");

                    b.Navigation("staff");
                });

            modelBuilder.Entity("CareNet_System.Models.Patient", b =>
                {
                    b.Navigation("medicication");
                });

            modelBuilder.Entity("CareNet_System.Models.Staff", b =>
                {
                    b.Navigation("warehouse")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
